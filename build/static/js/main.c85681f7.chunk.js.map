{"version":3,"sources":["reducers/actions.js","components/Slot.js","components/SlotInput.js","components/List.js","components/Navbar.js","components/ExtendSlots.js","App.js","serviceWorker.js","reducers/states.js","reducers/store.js","reducers/reducer.js","index.js"],"names":["addSlot","slot","type","payload","Slot","todo","dispatch","useDispatch","id","useState","name","setName","phone","setPhone","className","onClick","value","onChange","e","target","SlotInput","setId","List","todos","useSelector","state","map","key","Navbar","href","ExtendSlots","App","exact","path","component","Boolean","window","location","hostname","match","list","store","createStore","action","newList","index","i","length","index1","act","push","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c85681f7.chunk.js","sourcesContent":["export const ADD_SLOT=\"ADD_SLOT\";\r\nexport const DELETE_SLOT=\"DELETE_SLOT\";\r\nexport const EXTEND_SLOT=\"EXTEND_SLOT\";\r\n\r\nexport function addSlot(slot)\r\n{\r\n\treturn{\r\n\t\ttype:'ADD_SLOT',\r\n\t\tpayload: slot\r\n\t}\r\n}\r\n\r\nexport function deleteSlot(slotId)\r\n{\r\n\treturn{\r\n\t\ttype:'DELETE_SLOT',\r\n\t\tpayload: slotId\r\n\t}\r\n}\r\nexport function extendSlot()\r\n{\r\n\treturn{\r\n\t\ttype:'EXTEND_SLOT',\r\n\t\t\r\n\t}\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteSlot } from \"../reducers/actions\";\r\nimport { addSlot } from \"../reducers/actions\";\r\nimport \"./slotInput.css\";\r\n\r\nfunction Slot({ todo }) {\r\n  let dispatch = useDispatch();\r\n  let id = todo.id;\r\n  let [name, setName] = useState();\r\n  let [phone, setPhone] = useState();\r\n\r\n  return (\r\n    <div className=\" d-inline-block col-md-3 \">\r\n      {todo.name ? (\r\n        <div className=\"col mx-auto  border border-dark m-3 bg-light hero-image-booked\">\r\n          <div className=\"p-2 text-white text-center\">\r\n            <strong>This slot is booked</strong>\r\n          </div>\r\n          <div className=\"p-1 text-white text-center\">\r\n            <strong> Parking Slot No.#{todo.id}</strong>\r\n          </div>\r\n          <div className=\"p-2 text-white text-center\">\r\n            <h4>\r\n              {\" \"}\r\n              <strong>{todo.name}</strong>\r\n            </h4>\r\n          </div>\r\n          <div className=\"p-2 text-white text-center\">\r\n            <h4>\r\n              {\" \"}\r\n              <strong>{todo.phone}</strong>\r\n            </h4>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <button\r\n              onClick={() => {\r\n                setPhone(\"\");\r\n                setName(\"\");\r\n                dispatch(\r\n                  deleteSlot({\r\n                    ...todo,\r\n                    name: name,\r\n                    phone: phone,\r\n                  })\r\n                );\r\n              }}\r\n              className=\"btn btn-danger border border-white m-2\"\r\n            >\r\n              {\" \"}\r\n              <strong>Leave </strong>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"col m-3 bg-dark  hero-image-empty\">\r\n          <div className=\"p-2 text-center \">\r\n            <strong> Parking Slot No. #{todo.id}</strong>\r\n          </div>\r\n          <label className=\"text-center\">\r\n            <strong>Enter Your name</strong>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            className=\"col form-control\"\r\n          />\r\n          <label className=\"text-center\">\r\n            <strong>Enter phone number</strong>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            className=\"col form-control\"\r\n          />\r\n          <div className=\"text-center\">\r\n            <button\r\n              onClick={() => {\r\n                dispatch(\r\n                  addSlot({\r\n                    ...todo,\r\n                    name: name,\r\n                    phone: phone,\r\n                  })\r\n                );\r\n                setPhone(\"\");\r\n                setName(\"\");\r\n              }}\r\n              className=\"btn btn-dark border border-white m-2\"\r\n            >\r\n              <strong> Book</strong>{\" \"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Slot;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addSlot } from \"../reducers/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./slotInput.css\";\r\n\r\nfunction SlotInput() {\r\n  let dispatch = useDispatch();\r\n  let [id, setId] = useState();\r\n  let [name, setName] = useState();\r\n  let [phone, setPhone] = useState();\r\n\r\n  //\r\n  return (\r\n    <div className=\"col m-2 hero-image   text-center font-weight-bold text-white\">\r\n      <br />\r\n\r\n      <h1 className=\"text-center\"> Add Your Details</h1>\r\n      <br />\r\n      <div className=\"size text-center\">\r\n        <label>Enter parking slot</label>\r\n        <input\r\n          type=\"number\"\r\n          value={id}\r\n          onChange={(e) => setId(e.target.value)}\r\n          className=\"col form-control\"\r\n        />\r\n        <label>Enter Your name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          className=\"col form-control\"\r\n        />\r\n        {name ? null : <div className=\"text-danger\">Name is required</div>}\r\n        <label>Enter phone number</label>\r\n        <input\r\n          type=\"number\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n          className=\"col form-control\"\r\n        />\r\n        <br />\r\n        <div className=\"text-center\">\r\n          <button\r\n            onClick={() => {\r\n              dispatch(\r\n                addSlot({\r\n                  id: id,\r\n                  name: name,\r\n                  phone: phone,\r\n                })\r\n              );\r\n              setPhone(\"\");\r\n              setName(\"\");\r\n              setId(\"\");\r\n            }}\r\n            className=\"btn btn-primary  mx-2\"\r\n          >\r\n            <strong>Add</strong>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default SlotInput;\r\n","import React from \"react\";\r\nimport Slot from \"./Slot\";\r\nimport SlotInput from \"./SlotInput\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction List() {\r\n  let todos = useSelector((state) => state);\r\n\r\n  return (\r\n    <div className=\"my-4\">\r\n      <br />\r\n\r\n      <SlotInput />\r\n      <hr />\r\n      <h1 className=\"text-center\">Booked Slots</h1>\r\n\r\n      <hr />\r\n\r\n      {todos.map((todo) => {\r\n        return <Slot key={todo.id} todo={todo} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction Navbar() {\r\n  return (\r\n  <>\r\n  \t\r\n<nav className=\"navbar navbar-expand-sm bg-dark navbar-dark fixed-top\">\r\n  <a className=\"navbar-brand\" href=\"#\">PARKING SLOT BOOKING SYSTEM</a>\r\n \r\n</nav>\r\n  \t\r\n  \t\r\n  \t</>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { extendSlot } from \"../reducers/actions\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction ExtendSlots() {\r\n  let dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <hr />\r\n      <div className=\"text-center\">\r\n        <h1>You will get 8 Spaces at a time</h1>\r\n        <button\r\n          onClick={() => {\r\n            dispatch(extendSlot());\r\n          }}\r\n          className=\"btn btn-primary  mx-2\"\r\n        >\r\n          <strong>CLICK HERE FOR NEW SPACES</strong>\r\n        </button>\r\n\r\n        <hr />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExtendSlots;\r\n","import React,{Component} from 'react';\r\nimport List from './components/List';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport SlotInput from './components/SlotInput';\r\nimport Navbar from './components/Navbar';\r\nimport ExtendSlots from './components/ExtendSlots';\r\nimport {BrowserRouter , Route} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n  \r\n  <BrowserRouter>\r\n  <div className=\"App\">\r\n  \t<Navbar/>\r\n    <ExtendSlots/>\r\n  \t<Route  exact path='/'  component={List} />\r\n  \t<Route path='/add' component={SlotInput} />\r\n  \t<Route path='/list' component={List} />\r\n  \t</div>\r\n  \t</BrowserRouter>\r\n  \t\r\n  \t\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export let list=[\r\n{\r\n\tid:1,\r\n\tname:null,\r\n\tphone: null,\r\n},\r\n{\r\n\tid:2,\r\n\tname:null,\r\n\tphone: null,\r\n},\r\n{\r\n\tid:3,\r\n\tname:null,\r\n\tphone: null,\r\n},\r\n{\r\n\tid:4,\r\nname:null,\r\n\tphone: null,\r\n},\r\n{\r\n\tid:5,\r\n\tname:null,\r\n\tphone: null,\r\n},\r\n{\r\n\tid:6,\r\n\tname:null,\r\n\tphone: null,\r\n},\r\n{\r\n\tid:7,\r\nname:null,\r\n\tphone: null,\r\n},\r\n{\r\n\tid:8,\r\n\tname:null,\r\n\tphone: null,\r\n}\r\n]","\r\n import {createStore,combineReducers} from 'redux';\r\n import {reducer} from './reducer';\r\nexport let store=createStore(reducer);\r\n\r\n\r\n\r\n// function saveToLocalStorage(state)\r\n// {\r\n// \ttry{\r\n// \t\tconst serializedState=JSON.stringify(state);\r\n// \t\twindow.localStorage.setItem('state',serializedState);\r\n\r\n// \t}\r\n// \tcatch(e)\r\n// \t{\r\n// \t\tconsole.log(e);\r\n// \t}\r\n// }\r\n// function loadFromLocalStorage()\r\n// {\r\n// \ttry{\r\n// \t\tconst serializedState=localStorage.getItem('state',serializedState);\r\n// \t\tif(serializedState===null)\r\n// \t\t\treturn undefined\r\n// \t\treturn JSON.parse(serializedState);\r\n\r\n// \t}\r\n// \tcatch(e)\r\n// \t{\r\n// \t\tconsole.log(e);\r\n// \t\treturn undefined\r\n// \t}\r\n\r\n// }\r\n\r\n\r\n// const rootReducer=combineReducers(\r\n// {\r\n// \tlist:reducer,\r\n// })\r\n// const persistedState=loadFromLocalStorage()\r\n\r\n\r\n// store.subscribe(()=>saveToLocalStorage(store.getState()))\r\n\r\n//  const store=createStore(rootReducer,\r\n// \tpersistedState,\r\n// \twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() )\r\n//  ","import { ADD_SLOT, DELETE_SLOT, EXTEND_SLOT } from \"./actions\";\r\nimport { list } from \"./states\";\r\n\r\nexport let reducer = (state = list, action) => {\r\n  let newList = [...state];\r\n  switch (action.type) {\r\n    case ADD_SLOT:\r\n      newList = [...state];\r\n      let index = -1;\r\n      for (let i = 0; i < newList.length; i++) {\r\n        if (action.payload.id <= 50) {\r\n          index++;\r\n          if (newList[i].id == action.payload.id && newList[i].name == null)\r\n            break;\r\n        }\r\n        if (action.payload.id == null) {\r\n          index++;\r\n          if (newList[i].name == null) break;\r\n        }\r\n      }\r\n      if (index != -1) {\r\n        newList[index] = action.payload;\r\n        newList[index].id = index + 1;\r\n        return newList;\r\n      }\r\n\r\n      break;\r\n    case DELETE_SLOT:\r\n      newList = [...state];\r\n      let index1 = -1;\r\n      for (let i = 0; i < newList.length; i++) {\r\n        index1++;\r\n        if (newList[i].id == action.payload.id) break;\r\n      }\r\n      if (index1 != -1) {\r\n        newList[index1] = action.payload;\r\n        return newList;\r\n      }\r\n\r\n      break;\r\n    case EXTEND_SLOT:\r\n      newList = [...state];\r\n      for (let i = 1; i <= 8; i++) {\r\n        let act = {\r\n          id: newList.length + 1,\r\n          name: null,\r\n          phone: null,\r\n        };\r\n        newList.push(act);\r\n      }\r\n      return newList;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './reducers/store';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n  <React.StrictMode>\r\n  <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n    </React.StrictMode>,\r\n  \r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}